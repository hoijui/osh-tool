#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2021 Robin Vobruba <hoijui.quaero@gmail.com>
#
# SPDX-License-Identifier: Unlicense

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
#set -Eeu

#script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
#source "$script_dir/env"

windows=false
static=false

function print_help() {

	echo "Compiles the main binary of this project."
	echo
	echo "Usage:"
	echo "         $(basename "$0") [OPTIONS]"
	echo "Options:"
	echo "          -h, --help         Show this help message"
	echo "          -s, --static       Compile the binary statically (vs default dynamically)"
	echo "          -w, --windows      Cross-compile the binary for Windows 64bin"
}

# read command-line args
POSITIONAL=()
while [[ $# -gt 0 ]]
do
	arg="$1"
	shift # past argument

	case "$arg" in
		-h|--help)
			print_help
			exit 0
			;;
		-s|--static)
			static=true
			;;
		-w|--windows)
			windows=true
			;;
		*) # non-/unknown option
			POSITIONAL+=("$arg") # save it in an array for later
			;;
	esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if $windows
then
    # NOTE For windows builds, we ignore the `static` variable
    nimble -y build \
        --os:windows \
        --cpu:amd64 \
        --gcc.exe:/usr/bin/x86_64-w64-mingw32-gcc \
        --gcc.linkerexe:/usr/bin/x86_64-w64-mingw32-gcc \
        -d:release \
        --app:console \
        --opt:size \
        --passL:-static \
        --opt:speed \
        --embedsrc \
        --threads:on \
        --checks:on
elif $static
then
    nimble build \
        -y \
        --verbose \
        -d:release \
        -d:usePcreHeader \
        --opt:speed \
        --passL:-static \
        --passL:-no-pie \
        --passL:-lpcre \
        --passL:-lssl \
        --passL:-lcrypto \
        --dynlibOverride:ssl \
        --dynlibOverride:crypto \
        || (
            >&2 echo "WARN: Statically linking is only confirmed to work on Alpine Linux!"
            exit 1
            )
else
    nimble build \
        -y
fi

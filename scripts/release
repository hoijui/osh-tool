#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2022 Robin Vobruba <hoijui.quaero@gmail.com>
#
# SPDX-License-Identifier: Unlicense

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
set -Eeuo pipefail
#set -Eeu

# NOTE For the most part, this is a copy of:
# https://github.com/hoijui/rust-project-scripts/blob/master/release

script_dir=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
script_name="$(basename "$0")"
project_name="$(basename "$PWD")"

APP_NAME="Nim release script"

push="false"

function print_help() {

	echo "$APP_NAME - Releases a new version of this software."
	echo "Including a commit that changes the *.nimble version, and a tag."
	echo
	echo "Usage:"
	echo "  $script_name [OPTION...] [NEW-VERSION]"
	echo "Options:"
	echo "  -p, --push              Also push commit and tag to origin"
	echo "  -h, --help              Print this usage help and exit"
	echo "Examples:"
	echo "  $script_name"
}

# read command-line args
POSITIONAL=()
while [[ $# -gt 0 ]]
do
	arg="$1"
	shift # $2 -> $1, $3 -> $2, ...

	case "$arg" in
		-p|--push)
			push="true"
			;;
		-h|--help)
			print_help
			exit 0
			;;
		*) # non-/unknown option
			POSITIONAL+=("$arg") # save it in an array for later
			;;
	esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

new_version="${1:-}"

if [ -z "${new_version:-}" ]
then
  >&2 echo "ERROR: Please supply the new version as first argument to this script; aborting release process!"
  exit 1
fi

if [ -n "$(git diff --cached --numstat)" ]
then
	>&2 echo "ERROR: There are staged changes in the repo; aborting release process!"
	exit 2
fi

nimble_file="$(find . -maxdepth 1 -name '*.nimble' | sed -e 's|^\./||')"
nimble_file_regex="$(echo "$nimble_file_regex" | sed -e 's|\.|\\\\.|')"

if [ -z "${nimble_file:-}" ]
then
	>&2 echo "ERROR: No *.nimble file found in the current directory -> CWD is not a Nim projects root dir; aborting release process!"
	exit 4
fi

# Refreshes the index, so 'git diff-index' will show correct results.
git update-index --refresh || true > /dev/null
if git diff-index HEAD -- | grep -q "\s${nimble_file_regex}\$"
then
	>&2 echo "ERROR: There are changes in '$nimble_file'; aborting release process!"
	exit 3
fi

# Set new version in *.nimble
sed -i -e 's|^version[ \t]*=[ \t]*".*"$|version = "'"$new_version"'"|g' "$nimble_file"

git add "$nimble_file"
git commit -m "Switch our version to $new_version"
git tag -a -m "Release $project_name version $new_version" "$new_version"

if $push
then
	branch_name="$(git symbolic-ref HEAD 2>/dev/null)" \
		|| branch_name="(unnamed branch)" # detached HEAD
	branch_name="${branch_name##refs/heads/}"
	git push origin --tags "$branch_name"
else
	echo "Ready to release with:"
	echo "git push origin --tags master"
fi
